#! /usr/bin/env nextflow

import java.time.*
Date now = new Date()

conda.enabled = true

process {
    withName: RUN_ARPEGGIO {
        conda = "$baseDir/envs/arpeggio-env.yaml"
    }
}

profiles {
    standard {
        process {
            executor = "local"
            withLabel: largecpu_largemem {
                 cpus = 75
            }
            withLabel: medmem {
                 cpus = 1
            }
            withLabel: lowmem {
                 cpus = 1
            }
        }
    }

    crick {
        process {
            executor = "slurm"
            clusterOptions = "--partition=compute"
            withLabel: largecpu_largemem {
                cpus = 64
                memory = "128GB"
            }
            withLabel: arpeggio {
                cpus = 1
                memory = "18GB"
            }
            withLabel: lowmem {
                cpus = 1
                memory = "8GB"
            }
            withLabel: medmem {
                cpus = 1
                memory = "12GB"
            }
        }
    }
}

//eventually move these to base.conf
params.data_dir = "/home/crk_w20032671/ProCogGraphData/data_files"
params.cache_in = "/home/crk_w20032671/ProCogGraphData/cache_files"
params.output_dir = "/home/crk_w20032671/ProCogGraphData/" //the base directory where all output files and cache files are stored
params.manifest = "/home/crk_w20032671/ProCogGraphData/final_manifest.csv"

params {
    timestamp = now.format("yyyyMMdd")
    publish_dir = "${params.output_dir}/procoggraph_${params.timestamp}" //specify a directory to publish output files on command line to overwrite this
    //specifying these files additionally for extra cache to speed up operation - these are not workflow outputs, but reduce dependency on API calls etc
    cognate_ligands = "${params.cache_in}/cognate_ligands_df.pkl"
    glycoct_cache = "${params.cache_in}/glycoct_cache.pkl"
    smiles_cache = "${params.cache_in}/smiles_cache.pkl"
    csdb_linear_cache = "${params.cache_in}/csdb_linear_cache.pkl"
    parity_cache = "${params.cache_in}/cache_parity_calcs.pkl"
    //workflow specific parameters
    parity_threshold = 0.4
    domain_contact_cutoff = 3

    //paths to data files required for the workflow
    sifts_file = "${params.data_dir}/pdb_chain_enzyme.tsv.gz"
    enzyme_dat_file = "${params.data_dir}/enzyme.dat"
    enzyme_class_file = "${params.data_dir}/enzclass.txt"
    scop_domains_info_file = "${params.data_dir}/dir.cla.scop.1_75.txt"
    scop_descriptions_file = "${params.data_dir}/dir.des.scop.1_75.txt"
    interpro_xml = "${params.data_dir}/interpro.xml.gz"
    pfam_clans = "${params.data_dir}/clan.txt.gz"
    pfam_clan_rels = "${params.data_dir}/clan_membership.txt.gz"
    pfam_a_file = "${params.data_dir}/pfamA.txt.gz"
    cath_names = "${params.data_dir}/cath-names.txt"
    ccd_cif = "${params.data_dir}/ccd.cif"
    pubchem_mapping = "${params.data_dir}/pubchem_substance_id_mapping.txt"
    rhea2ec = "${params.data_dir}/rhea2ec.tsv"
    rhea_directions = "${params.data_dir}/rhea-directions.tsv"
    rhea_reactions_smiles = "${params.data_dir}/rhea-reaction-smiles.tsv"
}

timeline {
    enabled = true
    file = "procoggraph_${params.timestamp}_timeline.html"
}

report {
    enabled = true
    file = "procoggraph_${params.timestamp}_report.html"
}

trace {
    enabled = true
    file = "procoggraph_${params.timestamp}_trace.txt"
}